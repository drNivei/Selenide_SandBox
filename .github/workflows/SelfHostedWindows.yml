name: Selenide Tests (Self-Hosted Windows)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: self-hosted  # Key change for self-hosted runner
    strategy:
      matrix:
        java: [ '24' ]  # Tested with JDK 24 (LTS)
    env:
      SELENIUM_URL: http://localhost:4444/wd/hub

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        architecture: x64
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~\.m2\repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-

    - name: Start Selenium Server (Windows)
      shell: powershell
      run: |
        # Check if Docker is available
        if (Get-Command docker -ErrorAction SilentlyContinue) {
          docker pull selenium/standalone-firefox:4.19.1
          docker run -d -p 4444:4444 --name selenium-firefox selenium/standalone-firefox:4.19.1
        } else {
          # Fallback to standalone Selenium server
          $seleniumJar = "selenium-server.jar"
          if (-not (Test-Path $seleniumJar)) {
            Invoke-WebRequest -Uri "https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.19.1/selenium-server-4.19.1.jar" -OutFile $seleniumJar
          }
          Start-Process java -ArgumentList "-jar $seleniumJar standalone" -NoNewWindow
        }
        Start-Sleep -Seconds 15  # Wait for Selenium initialization
        
    - name: Run Selenide tests
      shell: cmd  # More reliable for Maven on Windows
      run: mvn test -Dselenide.remote=%SELENIUM_URL% -Dtest=Tests_TextBox
      
    - name: Prepare Allure directories
      shell: powershell
      run: |
        New-Item -ItemType Directory -Force -Path target\allure-results
        New-Item -ItemType Directory -Force -Path target\allure-report
    
    - name: Generate Allure Report
      if: always()
      shell: cmd
      run: |
        mvn allure:report
        dir /s target\allure-results
        dir /s target\site\allure-maven-plugin
    
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-${{ matrix.java }}
        path: target\site\allure-maven-plugin

    - name: Cleanup Selenium
      if: always()
      shell: powershell
      run: |
        if (Get-Command docker -ErrorAction SilentlyContinue) {
          docker stop selenium-firefox
          docker rm selenium-firefox
        } else {
          Stop-Process -Name "java" -ErrorAction SilentlyContinue
        }
